name: Run unit tests and ensures style guide
on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - 'README.md'

jobs:

  install-tools:
    name: "Install PHP tools"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Cache tools installed with PHIVE"
        uses: actions/cache@v3
        with:
          path: tools/*.phar
          key: php-phive-${{ hashFiles('.phive/phars.xml') }}
          restore-keys: php-phive-

      - name: "Install PHP tools with PHIVE"
        run: php ./phive.phar --no-progress install --trust-gpg-keys CBB3D576F2A0946F,4AA394086372C20A,E82B2FB314E9906E

  coding-guidelines:
    name: Check Coding Guidelines
    runs-on: ubuntu-latest
    needs: install-tools
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: bcmath
          coverage: none
          tools: none

      - name: "Get PHIVE tools from Cache"
        uses: actions/cache@v3
        with:
          path: tools/*.phar
          key: php-phive-${{ hashFiles('.phive/phars.xml') }}
          restore-keys: php-phive-

      - name: Run PHP-CS-Fixer
        run: php ./tools/php-cs-fixer.phar fix --dry-run --stop-on-violation --using-cache=no

  testing:
    name: "Testing with PHP ${{ matrix.php-version }}"
    runs-on: ubuntu-latest
    needs: install-tools
    strategy:
      matrix:
        php-version: ['8.0', '8.1', '8.2']
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath

      - name: "Get PHIVE tools from Cache"
        uses: actions/cache@v3
        with:
          path: tools/*.phar
          key: php-phive-${{ hashFiles('.phive/phars.xml') }}
          restore-keys: php-phive-

      - name: "Get composer cache directory"
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: "Restore composer cache"
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: PHP-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            PHP-${{ matrix.php-version }}-composer-

      - name: "Install composer dependencies"
        run: php ./tools/composer.phar install --no-progress --optimize-autoloader

      - name: "Run phpunit tests"
        run: php ./tools/phpunit.phar
